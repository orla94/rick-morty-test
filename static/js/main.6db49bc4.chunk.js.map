{"version":3,"sources":["components/Submit.js","components/Search.js","components/Navigation.js","pages/Home.js","components/Pagination.js","pages/AllEpisodes.js","pages/AllCharacters.js","pages/DetailCharacter.js","pages/DetailEpisode.js","pages/Error.js","components/Character.js","components/Episodes.js","pages/ResultSearch.js","App.js","serviceWorker.js","index.js"],"names":["Submit","className","type","value","Component","Search","searchRef","React","createRef","state","text","searchArray","page","nextPage","setState","prevPage","consultApi","apiCharacter","apiEpisodie","urlApi","fetch","then","response","json","result","results","dataSearch","getData","e","preventDefault","current","typeSearch","onSubmit","this","ref","input","onChange","placeholder","undefined","length","to","pathname","resultSearch","Navigation","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","isLoaded","itemsEpisode","itemsCharacter","pageC","apiEpisode","recentEpisode","slice","recentCharacter","map","key","src","image","alt","name","href","status","species","origin","location","episode","air_date","Pagination","props","onClick","AllEpisodes","componentDidMount","items","AllCharacters","DetailCharacter","item","match","params","gender","Error","CardCharacter","Episodes","ResultSearch","viewResultSearch","Fragment","Character","App","exact","path","component","DetailEpisode","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6db49bc4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Submit extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"form-group col-md-2\">\r\n        <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\"\r\n               value=\"Buscar\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Submit;\r\n","import React, { Component } from 'react';\r\nimport Submit from './Submit';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Search extends Component {\r\n  searchRef = React.createRef();\r\n  state ={\r\n    text: '',\r\n    type: '',\r\n    searchArray : [],\r\n    page: ''\r\n  }\r\n\r\n  nextPage = () => {\r\n    let page = this.state.page;\r\n    page ++;\r\n    this.setState({\r\n      page\r\n    });\r\n  }\r\n\r\n  prevPage = () => {\r\n    let page = this.state.page;\r\n    if(page === 1) return null;\r\n    page --;\r\n\r\n    this.setState({\r\n      page\r\n    });\r\n  }\r\n\r\n  consultApi = () => {\r\n    let apiCharacter = `https://rickandmortyapi.com/api/character/?page=${this.state.page}&name=${this.state.text}`;\r\n    let apiEpisodie = `https://rickandmortyapi.com/api/episode/?page=${this.state.page}&name=${this.state.text}`;\r\n\r\n    const urlApi = (this.state.type === 'character') ? apiCharacter : apiEpisodie;\r\n\r\n    fetch(urlApi)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({searchArray: result.results}));\r\n  }\r\n\r\n  dataSearch = (text, type) => {\r\n    this.setState({\r\n      text : text,\r\n      type : type,\r\n      page: 1\r\n    }, () =>{\r\n      this.consultApi();\r\n    })\r\n  };\r\n\r\n  getData = (e) => {\r\n    e.preventDefault();\r\n    //get the value of the input and sending it to the main component\r\n    this.dataSearch(this.searchRef.current.value, this.typeSearch.value);\r\n    this.searchRef.current.value = '';\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.getData}>\r\n          <div className=\"input-group\">\r\n            <div className=\"form-group col-md-2\" >\r\n              <select className=\"form-control form-control-lg\" ref={(input) => this.typeSearch = input} onChange={(input) => this.typeSearch = input}>\r\n                <option value=\"character\">Personajes</option>\r\n                <option value=\"episode\">Episodios</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-md-8\">\r\n              <input ref={this.searchRef} type=\"text\" className=\"form-control form-control-lg\"\r\n                     placeholder=\"Buscar...\" />\r\n            </div>\r\n            <Submit />\r\n          </div>\r\n        </form>\r\n\r\n        { (this.state.searchArray === undefined || this.state.searchArray.length === 0) &&\r\n          <Redirect to={{\r\n            pathname: '/',\r\n          }} />\r\n        }\r\n\r\n        {this.state.searchArray !== undefined && this.state.searchArray.length > 0 &&\r\n          <Redirect to={{\r\n            pathname: '/result',\r\n            state: {\r\n                    resultSearch: this.state.searchArray,\r\n                    type: this.state.type,\r\n                  }\r\n          }} />\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n       <div>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                      <span className=\"navbar-toggler-icon\"></span>\r\n                  </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                  <div className=\"navbar-nav\">\r\n                      <NavLink to=\"/\" className=\"nav-item nav-link\">Home</NavLink>\r\n                      <NavLink to=\"/episode\" className=\"nav-item nav-link\">Episodios</NavLink>\r\n                      <NavLink to=\"/character\" className=\"nav-item nav-link\">Personajes</NavLink>\r\n                  </div>\r\n              </div>\r\n          </nav>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          isLoaded: false,\r\n          itemsEpisode: [],\r\n          itemsCharacter: [],\r\n          page: 2,\r\n          pageC: 30\r\n        };\r\n    }\r\n\r\n  componentDidMount() {\r\n    const apiEpisode = `https://rickandmortyapi.com/api/episode/?page=${this.state.page}`;\r\n\r\n    fetch(apiEpisode)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({isLoaded: true, itemsEpisode: result.results}));\r\n\r\n      const apiCharacter = `https://rickandmortyapi.com/api/character/?page=${this.state.pageC}`;\r\n\r\n      fetch(apiCharacter)\r\n        .then(response => response.json())\r\n        .then(result => this.setState({isLoaded: true, itemsCharacter: result.results}));\r\n  }\r\n\r\n  render() {\r\n    let recentEpisode = this.state.itemsEpisode.slice(this.state.itemsEpisode.length-3)\r\n    let recentCharacter = this.state.itemsCharacter.slice(this.state.itemsCharacter.length-3)\r\n\r\n    return(\r\n      <div className=\"row\">\r\n         <h1 className=\"text-center col-12 mb-5 mt-5\">- PERSONAJES RECIENTES -</h1>\r\n\r\n         {recentCharacter.map(result => (\r\n           <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\" key={result.id}>\r\n            <div className=\"card\">\r\n            <img className=\"card-img-top\" src={result.image} alt={result.name}/>\r\n             <div className=\"card-body\">\r\n               <a href={`detail-character/${result.id}`}><h5 className=\"card-title font-weight-bold\">{result.name} - {result.status}</h5></a>\r\n               Especie:\r\n               <h6 className=\"font-weight-bold\">{result.species}</h6>\r\n               Origen:\r\n               <h6 className=\"font-weight-bold\">{result.origin.name}</h6>\r\n               Ubicación:\r\n               <h6 className=\"font-weight-bold\">{result.location.name}</h6>\r\n             </div>\r\n            </div>\r\n           </div>\r\n         ))}\r\n\r\n         <h1 className=\"text-center col-12 mb-5 mt-5\">- EPISODIOS RECIENTES -</h1>\r\n\r\n         {recentEpisode.map(result => (\r\n           <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\" key={result.id}>\r\n            <div className=\"card\">\r\n             <div className=\"card-body\">\r\n               <a href={`detail-episode/${result.id}`}><h5 className=\"card-title font-weight-bold\">{result.name}</h5></a>\r\n               Episodio:\r\n               <h6 className=\"font-weight-bold\">{result.episode}</h6>\r\n               Fecha:\r\n               <h6 className=\"font-weight-bold\">{result.air_date}</h6>\r\n             </div>\r\n            </div>\r\n           </div>\r\n         ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n\r\n   return(\r\n    <div className=\"py-3\">\r\n      <button onClick={props.prevPage} type=\"button\" className=\"btn btn-info mr-1\">Anterior &larr;</button>\r\n      <button onClick={props.nextPage} type=\"button\" className=\"btn btn-info\">Siguiente &rarr;</button>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport Pagination from './../components/Pagination';\r\n\r\nclass AllEpisodes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          isLoaded: false,\r\n          items: [],\r\n          page: 1\r\n        };\r\n    }\r\n\r\n\r\n  nextPage = () => {\r\n    let page = this.state.page;\r\n    page ++;\r\n    this.setState({\r\n      page\r\n    }, () => {\r\n      this.componentDidMount();\r\n    });\r\n  }\r\n\r\n  prevPage = () => {\r\n    let page = this.state.page;\r\n    if(page === 1) return null;\r\n    page --;\r\n    this.setState({\r\n      page\r\n    }, () => {\r\n      this.componentDidMount();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiEpisode = `https://rickandmortyapi.com/api/episode/?page=${this.state.page}`;\r\n\r\n    fetch(apiEpisode)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({isLoaded: true, items: result.results}));\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"row\">\r\n         <h1 className=\"text-center col-12 mb-5 mt-5\">EPISODIOS</h1>\r\n\r\n         {this.state.items.map(result => (\r\n           <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\" key={result.id}>\r\n            <div className=\"card\">\r\n             <div className=\"card-body\">\r\n               <a href={`detail-episode/${result.id}`}><h5 className=\"card-title font-weight-bold\">{result.name}</h5></a>\r\n               Episodio:\r\n               <h6 className=\"font-weight-bold\">{result.episode}</h6>\r\n               Fecha:\r\n               <h6 className=\"font-weight-bold\">{result.air_date}</h6>\r\n             </div>\r\n            </div>\r\n           </div>\r\n         ))}\r\n\r\n         <div className=\"container text-center\">\r\n           <Pagination\r\n             nextPage = {this.nextPage}\r\n             prevPage = {this.prevPage}\r\n           />\r\n         </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllEpisodes;\r\n","import React, { Component } from 'react';\r\nimport Pagination from './../components/Pagination';\r\n\r\nclass AllCharacters extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          isLoaded: false,\r\n          items: [],\r\n          page: 1\r\n        };\r\n    }\r\n\r\n\r\n  nextPage = () => {\r\n    let page = this.state.page;\r\n    page ++;\r\n    this.setState({\r\n      page\r\n    }, () => {\r\n      this.componentDidMount();\r\n    });\r\n  }\r\n\r\n  prevPage = () => {\r\n    let page = this.state.page;\r\n    if(page === 1) return null;\r\n    page --;\r\n    this.setState({\r\n      page\r\n    }, () => {\r\n      this.componentDidMount();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiCharacter = `https://rickandmortyapi.com/api/character/?page=${this.state.page}`;\r\n\r\n    fetch(apiCharacter)\r\n      .then(response => response.json())\r\n      .then(result => this.setState({isLoaded: true, items: result.results}));\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"row\">\r\n         <h1 className=\"text-center col-12 mb-5 mt-5\">PERSONAJES</h1>\r\n\r\n         {this.state.items.map(result => (\r\n           <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\" key={result.id}>\r\n            <div className=\"card\">\r\n            <img className=\"card-img-top\" src={result.image} alt={result.name}/>\r\n             <div className=\"card-body\">\r\n               <a href={`detail-episode/${result.id}`} className=\"nav-item nav-link\"><h5 className=\"card-title font-weight-bold\">{result.name} - {result.status}</h5></a>\r\n               Especie:\r\n               <h6 className=\"font-weight-bold\">{result.species}</h6>\r\n               Origen:\r\n               <h6 className=\"font-weight-bold\">{result.origin.name}</h6>\r\n               Ubicación:\r\n               <h6 className=\"font-weight-bold\">{result.location.name}</h6>\r\n             </div>\r\n            </div>\r\n           </div>\r\n         ))}\r\n\r\n         <div className=\"container text-center\">\r\n           <Pagination\r\n             nextPage = {this.nextPage}\r\n             prevPage = {this.prevPage}\r\n           />\r\n         </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllCharacters;\r\n","import React, { Component } from 'react';\r\n\r\nclass DetailCharacter extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      item: [],\r\n      isLoaded: false,\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      let id = this.props.match.params.id;\r\n      const apiCharacter = `https://rickandmortyapi.com/api/character/${id}`;\r\n      fetch(apiCharacter)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              item: result,\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n         <div className=\"text-center mb-5\">\r\n            <h1 className=\"text-center mt-2 mb-2\">- {this.state.item.name} -</h1>\r\n            <p className=\"h5\"><strong>Estado: </strong> {this.state.item.status}</p>\r\n            <img className=\"card-img-top w-25 img-thumbnail mb-2\" src={this.state.item.image} alt={this.state.item.name}/>\r\n            <p className=\"h5\"><strong>Género: </strong> {this.state.item.gender}</p>\r\n            <p className=\"h5\"><strong>Tipo: </strong> {this.state.item.type}</p>\r\n            <p className=\"h5\"><strong>Especie: </strong> {this.state.item.species}</p>\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default DetailCharacter;\r\n","import React, { Component } from 'react';\r\n\r\nclass DetailCharacter extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      item: [],\r\n      isLoaded: false,\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      let id = this.props.match.params.id;\r\n      const apiEpisode = `https://rickandmortyapi.com/api/episode/${id}`;\r\n      fetch(apiEpisode)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              item: result,\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n         <div className=\"text-center mb-5\">\r\n            <h1 className=\"text-center mt-2 mb-2\">- {this.state.item.name} -</h1>\r\n            <p className=\"h5\"><strong>Episodio: </strong> {this.state.item.episode}</p>\r\n            <p className=\"h5\"><strong>Fecha: </strong> {this.state.item.air_date}</p>\r\n         </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default DetailCharacter;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n       <div>\r\n          <p>Error: Page does not exist!</p>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nconst CardCharacter = (props) => {\r\n  const {name, image, species, location, origin, status, id} = props.result;\r\n\r\n   return(\r\n     <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\">\r\n      <div className=\"card\">\r\n      <img className=\"card-img-top\" src={image} alt={name}/>\r\n       <div className=\"card-body\">\r\n         <a href={`detail-episode/${id}`} className=\"nav-item nav-link\"><h5 className=\"card-title font-weight-bold\">{name} - {status}</h5></a>\r\n         Especie:\r\n         <h6 className=\"font-weight-bold\">{species}</h6>\r\n         Origen:\r\n         <h6 className=\"font-weight-bold\">{origin.name}</h6>\r\n         Ubicación:\r\n         <h6 className=\"font-weight-bold\">{location.name}</h6>\r\n       </div>\r\n      </div>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default CardCharacter;\r\n","import React from 'react';\r\n\r\nconst Episodes = (props) => {\r\n  const {name, episode, air_date, id} = props.result;\r\n\r\n   return(\r\n     <div className=\"col-12 col-sm-6 col-md-4 col-lg-4 mb-4\">\r\n      <div className=\"card\">\r\n       <div className=\"card-body\">\r\n         <a href={`detail-character/${id}`}><h5 className=\"card-title font-weight-bold\">{name}</h5></a>\r\n         Episodio:\r\n         <h6 className=\"font-weight-bold\">{episode}</h6>\r\n         Fecha:\r\n         <h6 className=\"font-weight-bold\">{air_date}</h6>\r\n       </div>\r\n      </div>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default Episodes;\r\n","import React, { Component } from 'react';\r\nimport Character from './../components/Character';\r\nimport Episodes from './../components/Episodes';\r\nimport Pagination from './../components/Pagination';\r\n\r\nclass ResultSearch extends Component {\r\n  viewResultSearch = () => {\r\n    const results = this.props.location.state.resultSearch;\r\n    if (results === undefined || results.length === 0) return null;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-12 p-5 row\" >\r\n          {this.typeSearch(results)}\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <Pagination\r\n            nextPage = {this.props.nextPage}\r\n            prevPage = {this.props.prevPage}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  typeSearch = (results) => {\r\n\r\n    if (this.props.location.state.type === 'character') {\r\n      return results.map(result => (\r\n        <Character\r\n          key = {result.id}\r\n          result = {result}\r\n        />\r\n      ));\r\n    }else {\r\n      return results.map(result => (\r\n        <Episodes\r\n          key = {result.id}\r\n          result = {result}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n      { this.viewResultSearch() }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultSearch;\r\n","import React, { Component } from 'react';\r\nimport Search from './components/Search';\r\nimport Navigation from './components/Navigation'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from './pages/Home';\r\nimport AllEpisodes from './pages/AllEpisodes';\r\nimport AllCharacters from './pages/AllCharacters';\r\nimport DetailCharacter from './pages/DetailCharacter';\r\nimport DetailEpisode from './pages/DetailEpisode';\r\nimport Error from './pages/Error';\r\nimport ResultSearch from './pages/ResultSearch'\r\n\r\nclass App extends Component{\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n          <BrowserRouter>\r\n          <div className=\"jumbotron\">\r\n            <Search/>\r\n          </div>\r\n            <div><Navigation /></div>\r\n            <div>\r\n                <Switch>\r\n                 <Route exact path=\"/\" component={Home}/>\r\n                 <Route exact path=\"/episode\" component={AllEpisodes}/>\r\n                 <Route exact path=\"/character\" component={AllCharacters}/>\r\n                 <Route exact path=\"/detail-character/:id\" component={DetailCharacter}/>\r\n                 <Route exact path=\"/detail-episode/:id\" component={DetailEpisode}/>\r\n                 <Route exact path=\"/result\" component={ResultSearch}/>\r\n                 <Route component={Error}/>\r\n               </Switch>\r\n            </div>\r\n          </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}